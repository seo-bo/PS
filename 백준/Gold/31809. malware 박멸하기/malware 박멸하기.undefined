#include <bits/stdc++.h>
#define MOD 1000000007
using namespace std;
typedef long long ll;
typedef pair<ll, ll> pll;
int main(void)
{
	cin.tie(0)->sync_with_stdio(0);
	int T = 0;
	cin >> T;
	while (T--)
	{
		ll n = 0, m = 0, p = 0, k = 0;
		cin >> n >> m >> p >> k;
		k++;
		vector<ll>c(n + 1), degree(n + 1, 0);
		for (int i = 1; i <= n; ++i)
		{
			cin >> c[i];
			c[i]--;
		}
		vector<vector<int>>graph(n + 1);
		for (int i = 0; i < m; ++i)
		{
			int a = 0, b = 0;
			cin >> a >> b;
			graph[a].push_back(b);
			degree[b]++;
		}
		priority_queue<pll, vector<pll>, greater<pll>>pq;
		for (int i = 1; i <= n; ++i)
		{
			if (!degree[i])
			{
				pq.push(make_pair(c[i], i));
			}
		}
		vector<ll>res;
		ll day = 0;
		while (!pq.empty())
		{
			auto [a, b] = pq.top();
			pq.pop();
			res.push_back(a + 1);
			day = a;
			for (auto& i : graph[b])
			{
				if (!(--degree[i]))
				{
					ll t = 0;
					if (day % p < c[i])
					{
						t = day / p;
					}
					else
					{
						t = (day + p - 1) / p;
					}
					pq.push(make_pair(t * p + c[i], i));
				}
			}
		}
		ll ans = 0, cnt = n;
		day = 1;
		for (auto& i : res)
		{
			if (day == k)
			{
				break;
			}
			ll d = min(i, k);
			ll pivot = d - day;
			ans = (ans + (pivot * cnt--) % MOD) % MOD;
			day = d;
		}
		if (day < k)
		{
			ans = (ans + ((k - day) * cnt) % MOD) % MOD;
		}
		cout << ans << '\n';
	}
	return 0;
}